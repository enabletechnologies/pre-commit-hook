[tool.commitizen]
version = "0.1.0"
tag_format = "v$version"
update_changelog_on_bump = true
version_files = [
  "pyproject.toml:version",
  "src/enable/pre-commit-hooks/__init__.py",
  "VERSION"
]
[tool.poetry]
name = "enable_pre-commit-hooks"
version = "0.1.0"
description = "A project to contain all pre-commit hooks for enable technologies"
authors = ["Cloudops <cloudops@enabletechnologies.com>"]
keywords = ["precommit", "conventional", "commits", "git"]
license = "Proprietary"
readme = "README.md"
packages = [{include = "enable", from = "src"}]


[tool.poetry.dependencies]
python = "^3.11"


[tool.poetry.group.dev.dependencies]
ruff = "^0.0.277"
mypy = "^1.4.1"
coverage = "^7.2.7"
black = "^23.3.0"
pytest = "^7.4.0"


[tool.mypy]
strict = true

[[tool.mypy.overrides]]
module = "fastapi.concurrency"
warn_unused_ignores = false
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "fastapi.tests.*"
ignore_missing_imports = true
check_untyped_defs = true

[tool.ruff]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "C",  # flake8-comprehensions
    "B",  # flake8-bugbear
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]


[tool.ruff.isort]
known-third-party = ["fastapi", "pydantic", "starlette"]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
